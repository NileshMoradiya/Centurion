// Grid Vars

// LTR or RTL Support
$ie7-support: false
$lang-front: left
$lang-back: right

// Desktop
$max-grid-size: 1120px
$grid-size: 960px
$max-space: 2%
$max-rows: 20

// Mobile
$max-resp-width: 100%
$max-resp-space: $max-space

// Classes
$grid-class: grid
$mobile-grid-class: mobile-grid


// Alpha, Omega, and Marging
@mixin alpha-omega
  .alpha
    margin-left: 0
    padding-left: 0
  .omega
    margin-right: 0
    padding-right: 0

@mixin margin($value)
  margin-left: $value
  margin-right: $value


// Center Grid - @include center-grid
@mixin grid-center
  .center-grid
    display: block
    float: none
    @include margin(auto)


// Direction (LTR or RTL)
@mixin float-direction
  float: $lang-front


// Semantic Grid - IE7 Support
@mixin ie-after-margin-fix ($space)
  *margin-left: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "#{$space}")
  *margin-right: expression((!this.className.match(/grid-[1-9]/) && this.currentStyle.display === "block" && this.currentStyle.width === "auto") && "#{$space}")


@mixin sem-ie-grid($num, $space:2%)
  $decimal: $num / 100
  @include ie7-grid-element($decimal)
  @if $ie7-support
    *padding-left: 0
    *padding-right: 0
    & > *
      @include ie-after-margin-fix ($space)

@mixin sem-ie-push($num, $space:2%)
  $decimal: $num / 100
  @include ie7-push($decimal)

@mixin sem-ie-pull($num)
  $decimal: $num / 100
  @include ie7-pull($decimal)


// Semantic Grid - IE Fix for Grid Percentage Converter
@mixin sem-ie-grid-thirds($num, $space:2%)
  $mul: 1/3
  $decimal: $num * $mul
  @include ie7-grid-element($decimal)
  @if $ie7-support
    *padding-left: 0
    *padding-right: 0
    & > *
      @include ie-after-margin-fix ($space)

@mixin sem-ie-push-thirds($num)
  $mul: 1/3
  $decimal: $num * $mul
  @include ie7-push($decimal)

@mixin sem-ie-pull-thirds($num)
  $mul: 1/3
  $decimal: $num * $mul
  @include ie7-pull($decimal)


// IE 7 Support
@mixin ie-7-support($space)
  @if $ie7-support
    *padding-left: 0
    *padding-right: 0
    & > *
      @include ie-after-margin-fix ($space)


// IE Specific Hacks - Border Box Fix
@mixin ie-percentage-width-fix($decimal)
  *width: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-push-fix($lang-front, $decimal)
  *#{$lang-front}: expression(Math.floor(#{$decimal} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-pull-fix($lang-front, $decimal)
  *#{$lang-front}: expression(Math.floor(#{$decimal * -1} * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px")
  
@mixin ie-percentage-direction-fix($decimal)

@mixin ie7-grid-element($decimal)
  @if $ie7-support
    @include ie-percentage-width-fix($decimal)
  
@mixin ie7-push($decimal)
  @if $ie7-support
    @include ie-percentage-push-fix($lang-front, $decimal)
  
@mixin ie7-pull($decimal)
  @if $ie7-support
    @include ie-percentage-pull-fix($lang-front, $decimal)


// Grid Rows
@mixin grid-rows($value, $direction, $rows: $max-rows)
  @if $value == normal
    // Rows by 5
    @for $i from 1 through $rows
      $num: $i * 5
      $decimal: $num / 100
      .grid-#{$num}
        width: 1% * $num
        @include ie7-grid-element($decimal)
      .pull-#{$num}
        #{$direction}: -(1% * $num)
        @include ie7-pull($decimal)
      .push-#{$num}
        #{$direction}: (1% * $num)
        @include ie7-push($decimal)

  @else if $value == thirds
    // Rows by 1/3
    @for $i from 1 through 2
      $num: $i * 33
      $mul: 1/3
      $decimal: $i * $mul
      $percent: ($num + $decimal)
  
      .grid-#{$num}
        width: 1% * $percent
        @include ie7-grid-element($decimal)
      .pull-#{$num}
        #{$direction}: -(1% * $percent)
        @include ie7-pull($decimal)
      .push-#{$num}
        #{$direction}: (1% * $percent)
        @include ie7-push($decimal)

  @else if $value == mobile
    /* Rows for Mobile */
    @for $i from 1 through 3
      $num: $i * 25
      .mobile-grid-#{$num}
        width: 1% * $num
      .mobile-pull-#{$num}
        #{$direction}: -(1% * $num)
      .mobile-push-#{$num}
        #{$direction}: (1% * $num)


// Desktop / Tablet Grid Generator - @include grid
@mixin grid($content-width: $grid-size, $space:$max-space, $rows:$max-rows, $direction:$lang-front)
  .container
    width: $content-width
    @include margin(auto)
    [class*="grid-"]
      +box-sizing(border-box)
      @include float-direction
      padding: 0 15px
      @include ie-7-support($space)
      position: relative
    
    @include grid-rows(normal, $direction)
    @include grid-rows(thirds, $direction)
    @include alpha-omega
    @include grid-center
    

// Mobile Grid Generator - NO PUSH OR PULL - @include grid-mobile
@mixin grid-mobile ($content-width: $max-resp-width, $space: $max-resp-space, $direction:$lang-front)
  $grid-width: 100%
  .container
    width: $content-width
    @include margin(auto)
    [class*="grid-"]
      display: inline
      @include float-direction
      width: $grid-width
      [class*="grid-"], 
      [class*="mobile-grid-"]
        padding: 0
        margin: 0
    
    /* Mobile Grid */
    @include grid-rows(mobile, $direction)
    @include alpha-omega
    @include grid-center
    
    [class*="pull-"],
    [class*="push-"]
      #{$direction}: 0
  
  @include hide-mobile
  

// Semantic Grid
@mixin sem-container($total-width)
  width: $total-width
  @include auto-center

@mixin sem-grid($col-width, $padding: 15px)
  +box-sizing(border-box)
  @include float-direction
  padding: 0 $padding
  position: relative
  width: 1% * $col-width

@mixin sem-push($offset-push, $direction: $lang-front)
  #{$direction}: (1% * $offset-push)

@mixin sem-pull($offset-pull, $direction: $lang-front)
  #{$direction}: -(1% * $offset-pull)
  
  
  
// Final Combined Grid Mixin
@mixin grid-generate($width:$grid-size)
  
  @include grid($width)
  
  @include media-query(phones)
    @include grid-mobile
  
  @include media-query(tablets)
    .container
      width: 98%
  
  @include media-query(desktops)
    .container
      width: $max-grid-size

